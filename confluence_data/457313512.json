{
    "parentId": "457313476",
    "ownerId": "60653f79352e1e0069fb728f",
    "lastOwnerId": null,
    "createdAt": "2024-12-21T16:42:34.338Z",
    "authorId": "60653f79352e1e0069fb728f",
    "parentType": "page",
    "version": {
        "number": 1,
        "message": "",
        "minorEdit": false,
        "authorId": "60653f79352e1e0069fb728f",
        "createdAt": "2024-12-21T16:42:36.166Z"
    },
    "position": 417555641,
    "body": {
        "export_view": {
            "representation": "export_view",
            "value": "<p>A\u00a0<strong>real-time component interface</strong> is available for PC-SPAN version 4. With this additional software module, licensed separately as SPAN Real-Time Component Interface (SPAN RTCI), you can develop programs which interface to PC-SPAN in real-time.</p><p>For example, suppose a customer requests an order.\u00a0 Using the component interface, your program can call PC-SPAN, specify the updated position that will result from the order, request that the performance bond be calculated, and receive back the updated performance bond requirement--all with extremely rapid execution times.</p><p>The SPAN Risk Manager Clearing software also has a real-time component interface. With this software module, in addition to everything you can do with the component interface to PC-SPAN, you can develop programs which execute the functions of the SPAN Risk Manager Clearing in real-time.</p><p>For example, you could programmatically update market prices for futures and physicals, and then recalculate volatilities, theoretical prices and risk arrays.</p><p>This\u00a0topic provides a technical reference to the real-time component interfaces for PC-SPAN, SPAN Risk Manager, and SPAN Risk Manager Clearing.</p><p><style type='text/css'>/*<![CDATA[*/\ndiv.rbtoc1741792361476 {padding: 0px;}\ndiv.rbtoc1741792361476 ul {list-style: disc;margin-left: 0px;}\ndiv.rbtoc1741792361476 li {margin-left: 0px;padding-left: 0px;}\n\n/*]]>*/</style><div class='toc-macro rbtoc1741792361476'>\n<ul class='toc-indentation'>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-dispinterfaceISpanCom'>dispinterface ISpanCom</a>\n<ul class='toc-indentation'>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortLoad(BSTRfileName,booleanreplaceExc,booleanuseExtLayout);'>short Load(BSTR fileName, boolean replaceExc, boolean useExtLayout);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSave(BSTRfileName);'>short Save(BSTR fileName);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectPIT(BSTRbusDate,shortisSettle,shortisFinal,BSTRbusTime,BSTRdescription);'>short SelectPIT(BSTR busDate, short isSettle, short isFinal, BSTR busTime, BSTR description);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectPortfolio(BSTRfirmCode,BSTRacctCode,BSTRsegType);'>short SelectPortfolio(BSTR firmCode, BSTR acctCode, BSTR segType);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetPIT();'>void ResetPIT();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetPortfolio();'>void ResetPortfolio();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-CalculateshortCalculate();'>short Calculate();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfSpanReq(shortpbClass,booleanisInitial);'>double GetPortfSpanReq(short pbClass, boolean isInitial);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfTotalReq(shortpbClass,booleanisInitial);'>double GetPortfTotalReq(short pbClass, boolean isInitial);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetCurPortfSpanReq(shortpbClass,booleanisInitial,BSTRcurCode);'>double GetCurPortfSpanReq(short pbClass, boolean isInitial, BSTR curCode);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetCurPortfTotalReq(shortpbClass,booleanisInitial,BSTRcurCode);'>double GetCurPortfTotalReq(short pbClass, boolean isInitial, BSTR curCode);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidDelete();'>void Delete();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfLongFutValue();'>double GetPortfLongFutValue();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfShortFutValue();'>double GetPortfShortFutValue();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfLongOptValue();'>double GetPortfLongOptValue();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfShortOptValue();'>double GetPortfShortOptValue();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidSetLogLevel(shortprocessId,shortpriorityId);'>void SetLogLevel(short processId, short priorityId);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidLogSave(BSTRfileName);'>void LogSave(BSTR fileName);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidLogClear();'>void LogClear();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCreatePortfolio(BSTRfirmCode,BSTRacctCode,BSTRsegType);'>short CreatePortfolio(BSTR firmCode, BSTR acctCode, BSTR segType);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfAcctType(BSTRacctType,booleanisClearing);'>short SetPortfAcctType(BSTR acctType, boolean isClearing);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfParent(BSTRfirmCode,BSTRacctCode,BSTRsegType);'>short SetPortfParent(BSTR firmCode, BSTR acctCode, BSTR segType);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfCurrency(BSTRcurrencyCode);'>short SetPortfCurrency(BSTR currencyCode);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-BSTRGetPortfCurrency();'>BSTR GetPortfCurrency();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfLedgerBalance(doublevalue);'>short SetPortfLedgerBalance(double value);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfLedgerBalance();'>double GetPortfLedgerBalance();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSavePortfolios(BSTRfilename);'>short SavePortfolios(BSTR filename);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfOpenTradeEquity(doublevalue);'>short SetPortfOpenTradeEquity(double value);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfOpenTradeEquity();'>double GetPortfOpenTradeEquity();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfSecurityOnDeposit(doublevalue);'>short SetPortfSecurityOnDeposit(double value);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfSecurityOnDeposit();'>double GetPortfSecurityOnDeposit();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfPosition(BSTRexchCmplxAcro,BSTRexchAcro,BSTRpfCode,shortpfType,BSTRfutPeriod,BSTRoptPeriod,booleanisPut,doublestrike,longtotalLong,longtotalShort,longintraLong,'>short SetPortfPosition(BSTR exchCmplxAcro, BSTR exchAcro, BSTR pfCode, short pfType, BSTR futPeriod, BSTR optPeriod, boolean isPut, double strike, long totalLong, long totalShort, long intraLong, long intraShort, long interLong, long interShort, long nakedLong, longnakedShort);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortChangePortfPosition(BSTRexchCmplxAcro,BSTRexchAcro,BSTRpfCode,shortpfType,BSTRfutPeriod,BSTRoptPeriod,booleanisPut,doublestrike,longtotalLong,longtotalShort,longintraLo'>short ChangePortfPosition(BSTR exchCmplxAcro, BSTR exchAcro, BSTR pfCode, short pfType, BSTR futPeriod, BSTR optPeriod, boolean isPut, double strike, long totalLong, long totalShort, long intraLong, long intraShort, long interLong, long interShort, long nakedLong, longnakedShort);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSavePositions(BSTRfileName);'>short SavePositions(BSTR fileName);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortLoadStream(SAFEARRAY(BYTE)data);'>short LoadStream(SAFEARRAY(BYTE) data);</a></li>\n</ul>\n</li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-dispinterfaceISpanComRM'>dispinterface ISpanComRM</a>\n<ul class='toc-indentation'>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectExchangeComplex(BSTRexcAcro);'>short SelectExchangeComplex(BSTR excAcro);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectBFCC(BSTRccCode);'>short SelectBFCC(BSTR ccCode);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectProductFamily(BSTRexchCode,BSTRpfCode,shortpfType);'>short SelectProductFamily(BSTR exchCode, BSTR pfCode, short pfType);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetExchangeComplex();'>void ResetExchangeComplex();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetBFCC();'>void ResetBFCC();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetProductFamily();'>void ResetProductFamily();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcImpliedVolatility(booleanflatCabVol);'>short CalcImpliedVolatility(boolean flatCabVol);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcCallPutAverage(booleanoutMoney,booleanacceptZero);'>short CalcCallPutAverage(boolean outMoney, boolean acceptZero);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcSeriesVolatility(booleanuseZero,doubleminExpTime,shortmaxIn,shortmaxOut,shortminAccept);'>short CalcSeriesVolatility(boolean useZero, double minExpTime, short maxIn, short maxOut, short minAccept);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcPrice(shortmeth,booleanresetAll);'>short CalcPrice(short meth, boolean resetAll);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcRiskArray(shortmeth,shortlimitMeth,booleanuseTheorPrice);'>short CalcRiskArray(short meth, short limitMeth, boolean useTheorPrice);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdatePrice(doublevalue,shortmeth);'>void UpdatePrice(double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateVolatility(doublevalue,shortmeth);'>void UpdateVolatility(double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdatePriceScan(doublevalue,shortmeth);'>void UpdatePriceScan(double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateVolScan(doublevalue,shortmeth);'>void UpdateVolScan(double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateRiskFreeRate(doublevalue,shortmeth);'>void UpdateRiskFreeRate(double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateDividendYield(doublevalue,shortmeth);'>void UpdateDividendYield(double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateTimeToExpiration(doublevalue,shortmeth);'>void UpdateTimeToExpiration(double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortUpdateCDSValue(shortvalueType,doublevalue,shortmeth);'>short UpdateCDSValue(short valueType, double value, short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetStartPeriod(BSTRperiodCode);'>short SetStartPeriod(BSTR periodCode);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetEndPeriod(BSTRperiodCode);'>short SetEndPeriod(BSTR periodCode);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetPeriods();'>void ResetPeriods();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCopyPIT(BSTRdescription,BSTRbusDate,shortisSettle,shortisFinal,BSTRbusTime);'>short CopyPIT(BSTR description, BSTR busDate, short isSettle, short isFinal, BSTR busTime);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidDoMarketObservation();'>void DoMarketObservation();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetMarketPrices();'>void ResetMarketPrices();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMFut();'>double GetPortfMTMFut();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMPrem();'>double GetPortfMTMPrem();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMTFut();'>double GetPortfMTMTFut();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMTPrem();'>double GetPortfMTMTPrem();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfUnrealizedPL();'>double GetPortfUnrealizedPL();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfRealizedPLOpen();'>double GetPortfRealizedPLOpen();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfRealizedPLLiq();'>double GetPortfRealizedPLLiq();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSaveRegistryTo(BSTRfileName);'>short SaveRegistryTo(BSTR fileName);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortApplyWhatIf(BSTRfileName,booleandoCalc);'>short ApplyWhatIf(BSTR fileName, boolean doCalc);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcValues();'>short CalcValues();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcGreeks(shortmeth);'>short CalcGreeks(short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortReplicateBasePrices();'>short ReplicateBasePrices();</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortApplyVolatilitySkew(shortmeth);'>short ApplyVolatilitySkew(short meth);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortPostTrade(BSTRtimeStamp,longtradeId,BSTRexchCmplxAcro,BSTRexchAcro,BSTRpfCode,shortpfType,BSTRfutPeriod,BSTRoptPeriod,booleanisPut,doublestrike,doubleprice,longtradeQty'>short PostTrade(BSTR timeStamp, long tradeId, BSTR exchCmplxAcro, BSTR exchAcro, BSTR pfCode, short pfType, BSTR futPeriod, BSTR optPeriod, boolean isPut, double strike, double price, long tradeQty);</a></li>\n<li><a href='#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortResetPrices(shortprodType);'>short ResetPrices(short prodType);</a></li>\n</ul>\n</li>\n</ul>\n</div></p><p><br/></p><hr/><p>Below is an example of calling the component interface from Visual C++ code.\u00a0</p><p>#include &lt;stdio.h&gt;<br/>#include &lt;ole2.h&gt;<br/>#import &quot;C:\\Span4\\Bin\\SpanCom.tlb&quot; no_namespace, named_guids</p><p>int main(int argc, char* argv[])<br/>{</p><p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(FAILED(::CoInitialize(NULL))) return 1;</p><p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ISpanCom* pSpanCom;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if(SUCCEEDED(::CoCreateInstance(CLSID_SpanCom, NULL, CLSCTX_LOCAL_SERVER,<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 __uuidof(ISpanCom), (LPVOID*) &amp;pSpanCom)))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 printf( &quot;Success\\n&quot;);<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // pSpanCom-&gt;Load(&quot;C:\\\\cme0216s.par&quot;,1,0);<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pSpanCom-&gt;Release();<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }</p><p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else printf(&quot;Fail\\n&quot;);<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ::CoUninitialize();<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 return 0;<br/>}</p><hr/><h1 id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-dispinterfaceISpanCom\">dispinterface ISpanCom</h1><p><strong>methods:</strong></p><h4 id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortLoad(BSTRfileName,booleanreplaceExc,booleanuseExtLayout);\">short\u00a0Load(BSTR\u00a0<em>fileName</em>, boolean\u00a0<em>replaceExc</em>, boolean\u00a0<em>useExtLayout</em>);</h4><div class=\"APISection\"><p class=\"section\">Description:</p><p class=\"sectionBody\">Load any SPAN recognized file into PC-SPAN, including SPAN files (*.SPN), classic &quot;flat-files&quot; (*.PA2), position files (*.txt and *.pos), etc. All position files (*.txt and *.pos) require corresponding risk parameter files to be already loaded. Positions are loaded into the currently selected point in time. If this point in time is not present positions are loaded into the first available point in time.\u00a0<br/><br/>For more details on supported file formats, click\u00a0<a href=\"https://www.cmegroup.com/confluence/display/pubspan/Layout+Guides\" class=\"external-link\" rel=\"nofollow\">here</a>.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>fileName</em>\u00a0- BSTR - The document to be loaded.</li><li><em>replaceExc</em>\u00a0- bool - Specifies whether PC-SPAN should replace already loaded exchange complexes with the ones from the file (true) or leave them intact (false)</li><li><em>useExtLayout</em>\u00a0- bool - Specifies whether PC-SPAN should use extended file layout when loading positions. It is only used for loading old format position files (*.txt).</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSave(BSTRfileName);\">short\u00a0Save(BSTR\u00a0<em>fileName</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Saves all the information from PC-SPAN into a file.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>fileName</em>\u00a0- BSTR - The name of document to be saved, in the SPAN\u00a0<a href=\"https://www.cmegroup.com/confluence/display/pubspan/XML-based+Risk+Parameter+File\" class=\"external-link\" rel=\"nofollow\">XML format</a>.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectPIT(BSTRbusDate,shortisSettle,shortisFinal,BSTRbusTime,BSTRdescription);\">short\u00a0SelectPIT(BSTR\u00a0<em>busDate</em>, short\u00a0<em>isSettle</em>, short\u00a0<em>isFinal</em>, BSTR\u00a0<em>busTime,\u00a0</em><strong>BSTR</strong><em>\u00a0description</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Selects a specified point in time as current point in time. Once selected, a point in time remains selected until it is reset, a different point in time is selected, or until the point in time is cleared.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>busDate</em>\u00a0- BSTR - The date of the point in time to select. The point in time must be in a &quot;YYYYMMDD&quot; format. Alternatively, the busDate string parameter may be empty to select the first point in time.</li><li><em>isSettle</em>\u00a0- short - Search for a point in time where the settlement is: '0' for non-settlement; '1' for settlement; or '-1' for no preference on settlement indication.</li><li><em>isFinal</em>\u00a0- short - Search for a point in time where the final flag is: '0' for not final; '1' for final; or '-1' for no preference on final indication.</li><li><em>busTime</em>\u00a0- BSTR - When the\u00a0<em>isSettle</em>\u00a0flag is 0, the busTime may be optionally specified. It is formatted as &quot;HHMM&quot;. If\u00a0<em>isSettle</em>\u00a0flag is not 0, the busTime is ignored.</li><li><em>description</em>\u00a0- BSTR - When the\u00a0<em>isSettle</em>\u00a0flag is not -1, the description may be optionally specified to match the description of available points in time. If passed as an empty string, it is ignored.</li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">If\u00a0<em>busDate</em>\u00a0is empty and the\u00a0<em>isSettle</em>\u00a0is -1, the rest of the parameters are ignored and first available point in time is selected. If either\u00a0<em>isSettle</em>\u00a0or\u00a0<em>isFinal</em>\u00a0is set to \u20131 this parameter and all parameters following it are ignored. If\u00a0<em>busTime</em>\u00a0or\u00a0<em>description</em>\u00a0is empty it is ignored.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectPortfolio(BSTRfirmCode,BSTRacctCode,BSTRsegType);\">short\u00a0SelectPortfolio(BSTR\u00a0<em>firmCode</em>, BSTR\u00a0<em>acctCode</em>, BSTR\u00a0<em>segType</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Selects specified portfolio as current. This method searches for the specified portfolio in the currently selected point in time. If point in time is not selected it fails.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>firmCode</em>\u00a0- BSTR - If not empty, it will be used to match the firm code to find the portfolio.</li><li><em>acctCode</em>\u00a0- BSTR - If not empty, it will be used to match the account code.</li><li><em>segType</em>\u00a0- BSTR - If not empty, it will be used to match the seg type code.</li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">If all parameters are empty, the first portfolio will be selected. Any combination of parameters may be used.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetPIT();\">void\u00a0ResetPIT();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets currently selected point in time to NULL (removes selection). Also resets portfolio selection.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Remarks:</p><p class=\"sectionBody\">When the point in time selection is reset, the point in time is still available. It is merely no longer selected as the active point in time.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetPortfolio();\">void\u00a0ResetPortfolio();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets currently selected portfolio to NULL (removes selection).</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Remarks:</p><p class=\"sectionBody\">When this call is made, the portfolio is still available. It is no longer selected as the active portfolio. The point in time selection is not affected by this call.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-CalculateshortCalculate();\"><span class=\"confluence-anchor-link\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-Calculate\"><span class=\"confluence-anchor-link\" id=\"Calculate\"></span></span>short\u00a0Calculate();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Performs SPAN requirements calculations for the currently selected object. If portfolio selection is not NULL it does calculations only for the selected portfolio. If it is NULL and point in time selection is not NULL it does calculations for all portfolios in the selected point in time. If both selected portfolio and selected point in time are NULL it does calculations for all points in time and portfolios loaded into PC-SPAN.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfSpanReq(shortpbClass,booleanisInitial);\">double\u00a0GetPortfSpanReq(short\u00a0<em>pbClass</em>, boolean\u00a0<em>isInitial</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns SPAN requirement calculated for the selected portfolio. If a portfolio is not selected (NULL) or if\u00a0<a href=\"https://cmegroupclientsite.atlassian.net/wiki/spaces/pubsub/pages/457313512/Component+Interface+for+Version+4+of+PC-SPAN+SPAN+Risk+Manager+and+SPAN+Risk+Manager+Clearing#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-Calculate\">Calculate</a>\u00a0has not been called, the return is 0.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>pbClass</em>\u00a0- short - Specifies the class of the requirement. It can be 1(CORE) or 2(RESERVE).</li><li><em>isInitial</em>\u00a0- boolean - Indicates maintenance (false) or initial (true) requirement.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns SPAN requirement calculated for the selected portfolio.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfTotalReq(shortpbClass,booleanisInitial);\">double\u00a0GetPortfTotalReq(short\u00a0<em>pbClass</em>, boolean\u00a0<em>isInitial</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns Total requirement calculated for the selected portfolio. If a portfolio is not selected (NULL) or if\u00a0<a href=\"https://cmegroupclientsite.atlassian.net/wiki/spaces/pubsub/pages/457313512/Component+Interface+for+Version+4+of+PC-SPAN+SPAN+Risk+Manager+and+SPAN+Risk+Manager+Clearing#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-Calculate\">Calculate</a>\u00a0has not been called, the return is 0.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>pbClass</em>\u00a0- short - Specifies the class of the requirement. It can be 1(CORE) or 2(RESERVE).</li><li><em>isInitial</em>\u00a0- boolean - Indicates maintenance (false) or initial (true) requirement.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns Total requirement calculated for the selected portfolio.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetCurPortfSpanReq(shortpbClass,booleanisInitial,BSTRcurCode);\">double\u00a0GetCurPortfSpanReq(short\u00a0<em>pbClass</em>, boolean\u00a0<em>isInitial</em>, BSTR\u00a0<em>curCode</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns SPAN requirement calculated for the selected portfolio for the specified currency. If a portfolio is not selected (NULL), or if an invalid curCode is passed, or if\u00a0<a href=\"https://cmegroupclientsite.atlassian.net/wiki/spaces/pubsub/pages/457313512/Component+Interface+for+Version+4+of+PC-SPAN+SPAN+Risk+Manager+and+SPAN+Risk+Manager+Clearing#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-Calculate\">Calculate</a>\u00a0has not been called, the return is 0.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>pbClass</em>\u00a0- short - Specifies the class of the requirement. It can be 1(CORE) or 2(RESERVE).</li><li><em>isInitial</em>\u00a0- boolean - Indicates maintenance (false) or initial (true) requirement.</li><li><em>curCode</em>\u00a0- BSTR - Specifies the currency code to get the Span requirement in.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns SPAN requirement calculated for the selected portfolio for the specified currency.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetCurPortfTotalReq(shortpbClass,booleanisInitial,BSTRcurCode);\">double\u00a0GetCurPortfTotalReq(short\u00a0<em>pbClass</em>, boolean\u00a0<em>isInitial</em>, BSTR\u00a0<em>curCode</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns Total requirement calculated for the selected portfolio for the specified currency. If a portfolio is not selected (NULL), or if an invalid curCode is passed, or if\u00a0<a href=\"https://cmegroupclientsite.atlassian.net/wiki/spaces/pubsub/pages/457313512/Component+Interface+for+Version+4+of+PC-SPAN+SPAN+Risk+Manager+and+SPAN+Risk+Manager+Clearing#ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-Calculate\">Calculate</a>\u00a0has not been called, the return is 0.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>pbClass</em>\u00a0- short - Specifies the class of the requirement. It can be 1(CORE) or 2(RESERVE).</li><li><em>isInitial</em>\u00a0- boolean - Indicates maintenance (false) or initial (true) requirement.</li><li><em>curCode</em>\u00a0- BSTR - Specifies the currency code to get the Total requirement in.</li><li><em>curCode</em>\u00a0- BSTR - Specifies the currency code to get the Total requirement in.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns Total requirement calculated for the selected portfolio for the specified currency.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidDelete();\">void\u00a0Delete();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Deletes currently selected object from PC-SPAN. If a portfolio selection has been made, it deletes only the selected portfolio. If it is not selected (NULL) and a point in time selection is selected (NULL) it deletes the selected point in time. If both neither a portfolio or a point in time are selected (both NULL), then the whole contents of the PC-SPAN is deleted.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfLongFutValue();\">double\u00a0GetPortfLongFutValue();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns long futures value calculated for the selected portfolio. If portfolio is not selected (NULL) it returns 0.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns long futures value for selected portfolio.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfShortFutValue();\">double\u00a0GetPortfShortFutValue();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns short futures value calculated for the selected portfolio. If portfolio is not selected (NULL) it returns 0.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns short futures value for selected portfolio.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfLongOptValue();\">double\u00a0GetPortfLongOptValue();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns long options value calculated for the selected portfolio. If portfolio is not selected (NULL) it returns 0.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns long options value for selected portfolio.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfShortOptValue();\">double\u00a0GetPortfShortOptValue();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns short options value calculated for the selected portfolio. If portfolio is not selected (NULL) it returns 0.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns short options value for selected portfolio.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidSetLogLevel(shortprocessId,shortpriorityId);\">void\u00a0SetLogLevel(short\u00a0<em>processId</em>, short\u00a0<em>priorityId</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to specify logging level for PC-SPAN.</p><p class=\"section\">Parameters</p><ul class=\"sectionBody\"><li><em>processId</em>\u00a0- short - The upper limit for process id of the log message source. Possible values for processLimits are:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">PROC_ID_LOAD_RISK</td><td class=\"confluenceTd\">= 10;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_LOAD_POS</td><td class=\"confluenceTd\">= 20;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_LOAD_XML</td><td class=\"confluenceTd\">= 30;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_OMNIBUS</td><td class=\"confluenceTd\">= 40;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_START</td><td class=\"confluenceTd\">= 51;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_PBOND</td><td class=\"confluenceTd\">= 60;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_SPREAD</td><td class=\"confluenceTd\">= 70;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_LIQ_RISK</td><td class=\"confluenceTd\">= 80;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_DETAIL_START</td><td class=\"confluenceTd\">= 101;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_SPREAD_DETAIL</td><td class=\"confluenceTd\">= 110;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_LIQ_RISK_DETAIL</td><td class=\"confluenceTd\">= 120;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_CALC_POS_DETAIL</td><td class=\"confluenceTd\">= 130;</td></tr><tr><td class=\"confluenceTd\">PROC_ID_UPPER</td><td class=\"confluenceTd\">= -1;</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>priorityId</em>\u00a0- short - The lower limit for the log message priority. Possible values for the priorityId are:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">PRIORITY_ID_LOW</td><td class=\"confluenceTd\">= -1;</td></tr><tr><td class=\"confluenceTd\">PRIORITY_ID_NORMAL</td><td class=\"confluenceTd\">= 10;</td></tr><tr><td class=\"confluenceTd\">PRIORITY_ID_WARNING</td><td class=\"confluenceTd\">= 20;</td></tr><tr><td class=\"confluenceTd\">PRIORITY_ID_ERROR</td><td class=\"confluenceTd\">= 30;</td></tr></tbody></table></div><p class=\"section\">Remarks:</p><p class=\"sectionBody\">Default values are 0 (processId) and 30 (priorityId - only errors) are logged.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidLogSave(BSTRfileName);\">void\u00a0LogSave(BSTR\u00a0<em>fileName</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Saves PC-SPAN log into the file specified by\u00a0<em>fileName</em>.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\"><em>fileName</em>\u00a0- BSTR - The file name to save the log as.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidLogClear();\">void\u00a0LogClear();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Clears the PC-SPAN Log.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCreatePortfolio(BSTRfirmCode,BSTRacctCode,BSTRsegType);\">short\u00a0CreatePortfolio(BSTR\u00a0<em>firmCode</em>, BSTR\u00a0<em>acctCode</em>, BSTR\u00a0<em>segType</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Creates a new portfolio with specified parameters in the selected point in time and selects it as current. The call will fail if a point in time is not selected. If portfolio with given parameters already exist selects the existing portfolio as current (the call does not create a duplicate one).</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>firmCode</em>\u00a0- BSTR - The firm code to create a portfolio with.</li><li><em>acctCode</em>\u00a0- BSTR - The account code to create a portfolio with.</li><li><em>segType</em>\u00a0- BSTR - The segment type to create a portfolio with. If\u00a0<em>segType</em>\u00a0is empty, a \u201cN/A\u201d segment type is assumed.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"section\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfAcctType(BSTRacctType,booleanisClearing);\">short\u00a0SetPortfAcctType(BSTR\u00a0<em>acctType</em>, boolean\u00a0<em>isClearing</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets account type for the selected portfolio. If portfolio is not selected the call will fail. If the specified account type is not found in the organization master database the call will fail. The selected portfolio can not have positions already defined otherwise the call will fail.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>acctType</em>\u00a0- BSTR - The account type for the selected portfolio. The following values are currently defined for the\u00a0<em>acctType</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">N</td><td class=\"confluenceTd\">- normal</td></tr><tr><td class=\"confluenceTd\">M</td><td class=\"confluenceTd\">- member</td></tr><tr><td class=\"confluenceTd\">H</td><td class=\"confluenceTd\">- hedge</td></tr><tr><td class=\"confluenceTd\">S</td><td class=\"confluenceTd\">- speculator</td></tr><tr><td class=\"confluenceTd\">O</td><td class=\"confluenceTd\">- omnibus (speculator)</td></tr><tr><td class=\"confluenceTd\">Q</td><td class=\"confluenceTd\">- omnibus (hedge).</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>isClearing</em>\u00a0- boolean - specifies whether account is customer(false) or clearing(true).</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfParent(BSTRfirmCode,BSTRacctCode,BSTRsegType);\">short\u00a0SetPortfParent(BSTR\u00a0<em>firmCode</em>, BSTR\u00a0<em>acctCode</em>, BSTR\u00a0<em>segType</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets parent portfolio for the selected portfolio by finding a portfolio using the parameters provided. Used only for omnibus accounts. Only omnibus account can be a parent of another portfolio. Only one level of parents is supported. Fails if portfolio is not selected, parent portfolio can not be found or omnibus rules are violated.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>firmCode</em>\u00a0- BSTR - The portfolio firmCode to search for the selected portfolio.</li><li><em>acctCode</em>\u00a0- BSTR - The portfolio acctCode to search for the selected portfolio.</li><li><em>segType</em>\u00a0- BSTR - The portfolio segType to search for the selected portfolio.</li></ul><p class=\"section\">Return Value</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfCurrency(BSTRcurrencyCode);\">short\u00a0SetPortfCurrency(BSTR\u00a0<em>currencyCode</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets currency for the selected portfolio.</p><p class=\"section\">Parameters</p><ul class=\"sectionBody\"><li><em>currencyCode</em>\u00a0- BSTR - A three-letter ISO code for the currency (USD, EUR, GBP etc.).</li></ul><p class=\"section\">Remarks</p><p class=\"sectionBody\">The call will fail if a portfolio is not selected or if the currency parameter is not defined in the organization master database.</p><p class=\"section\">Return Value</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-BSTRGetPortfCurrency();\">BSTR\u00a0GetPortfCurrency();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns a three-letter ISO code for the currency of the selected portfolio. If a portfolio is not selected or the currency for it is not specified method returns an empty string.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">BSTR - Returns an ISO code for the selected portfolio currency.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfLedgerBalance(doublevalue);\">short\u00a0SetPortfLedgerBalance(double\u00a0<em>value</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets ledger balance for the selected portfolio. Fails if portfolio is not selected.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The portfolio ledger balance to set.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfLedgerBalance();\">double\u00a0GetPortfLedgerBalance();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns ledger balance for the selected portfolio. If portfolio is not selected, the call will fail.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns the ledge balance or 0 if no portfolio is selected.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSavePortfolios(BSTRfilename);\">short\u00a0SavePortfolios(BSTR\u00a0<em>filename</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Saves portfolios to a file.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>fileName</em>\u00a0- BSTR - The name of the portfolio file to save.</li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">If a portfolio is selected, only the selected portfolio will be saved. If a portfolio is not selected but a point in time is selected, all of the portfolios belonging to the selected point in time will be saved. A portfolio or a point in time must be selected, otherwise the call will fail.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfOpenTradeEquity(doublevalue);\">short\u00a0SetPortfOpenTradeEquity(double\u00a0<em>value</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets open trade equity for the selected portfolio. Fails if portfolio is not selected.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>- double - The open trade equity to set.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfOpenTradeEquity();\">double\u00a0GetPortfOpenTradeEquity();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns open trade equity for the selected portfolio. If a portfolio is not selected, the return will be 0.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns open trade equity or 0 if no portfolio is selected.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfSecurityOnDeposit(doublevalue);\">short\u00a0SetPortfSecurityOnDeposit(double\u00a0<em>value</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets security on deposit for the selected portfolio. The call will fail if a portfolio is not selected.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The security on deposit value to set.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfSecurityOnDeposit();\">double\u00a0GetPortfSecurityOnDeposit();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns security on deposit for the selected portfolio. If a portfolio is not selected returns 0.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - Returns the security on deposit or 0 if no portfolio is selected.</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetPortfPosition(BSTRexchCmplxAcro,BSTRexchAcro,BSTRpfCode,shortpfType,BSTRfutPeriod,BSTRoptPeriod,booleanisPut,doublestrike,longtotalLong,longtotalShort,longintraLong,\">short\u00a0SetPortfPosition(BSTR\u00a0<em>exchCmplxAcro</em>, BSTR\u00a0<em>exchAcro</em>, BSTR\u00a0<em>pfCode</em>, short\u00a0<em>pfType</em>, BSTR\u00a0<em>futPeriod</em>, BSTR\u00a0<em>optPeriod</em>, boolean\u00a0<em>isPut</em>, double\u00a0<em>strike</em>, long\u00a0<em>totalLong</em>, long\u00a0<em>totalShort</em>, long\u00a0<em>intraLong</em>, long\u00a0<em>intraShort</em>, long\u00a0<em>interLong</em>, long\u00a0<em>interShort</em>, long\u00a0<em>nakedLong</em>, long<em>nakedShort</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets positions in the selected portfolio in the specified contract. If portfolio is not selected or contract can not be found the method will fail.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>exchCmplxAcro</em>\u00a0- BSTR - The exchange complex acronym (\u201cCME\u201d, \u201cBOTCC\u201d, etc.)</li><li><em>exchAcro</em>\u00a0- BSTR - The exchange acronym (\u201cCME\u201d, \u201cCBT\u201d, etc.)</li><li><em>pfCode</em>\u00a0- BSTR - The product family code (\u201cSP\u201d, \u201cBP\u201d, etc.)</li><li><em>pfType</em>\u00a0- short - The product family type. Possible values are:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- physical</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- debt</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- stock</td></tr><tr><td class=\"confluenceTd\">11</td><td class=\"confluenceTd\">- future</td></tr><tr><td class=\"confluenceTd\">12</td><td class=\"confluenceTd\">- equivalence debt</td></tr><tr><td class=\"confluenceTd\">14</td><td class=\"confluenceTd\">- forward</td></tr><tr><td class=\"confluenceTd\">15</td><td class=\"confluenceTd\">- interest rate swap</td></tr><tr><td class=\"confluenceTd\">16</td><td class=\"confluenceTd\">- E-Debt</td></tr><tr><td class=\"confluenceTd\">17</td><td class=\"confluenceTd\">- credit rate swap</td></tr><tr><td class=\"confluenceTd\">21</td><td class=\"confluenceTd\">- option on physical</td></tr><tr><td class=\"confluenceTd\">22</td><td class=\"confluenceTd\">- option on future</td></tr><tr><td class=\"confluenceTd\">23</td><td class=\"confluenceTd\">- option on equity</td></tr><tr><td class=\"confluenceTd\">31</td><td class=\"confluenceTd\">- combination</td></tr><tr><td class=\"confluenceTd\">41</td><td class=\"confluenceTd\">- option on combination</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>futPeriod</em>\u00a0- BSTR - The period code for future contract (period code for the underlying contract for options). Format is usually YYYYMM, there are special cases like weeklies and flexes when some characters are added to this format (for example \u201c200002W3\u201d). For physicals, equity and options on physicals/equity this parameter should be set to \u201c000000\u201d.</li><li><em>optPeriod</em>\u00a0- BSTR - The period code for option contract. This parameter and following contract identification parameters are ignored for non-option contracts. Same format as\u00a0<em>futPeriod</em>.</li><li><em>isPut</em>\u00a0- boolean - The put (true) or call (false) flag for options.</li><li><em>strike</em>\u00a0- double - The strike price for options. For CDS products, this is the coupon.</li><li><em>totalLong</em>\u00a0- long - The new value for total long positions. If portfolio is net based this value will be used for calculating net positions (<strong>Net</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>totalShort</em>)</li><li><em>totalShort</em>\u00a0- long - The new value for total short positions. If portfolio is net based this value will be used for calculating net positions (<strong>Net</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>totalShort</em>)</li><li><em>intraLong</em>\u00a0- long - The new value for intra long positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedLong</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>intraLong - interLong</em>)</li><li><em>intraShort</em>\u00a0- long - The new value for intra short positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedShort</strong>\u00a0=\u00a0<em>totalShort</em>\u00a0\u2013\u00a0<em>intraShort - interShort</em>)</li><li><em>interLong</em>\u00a0- long - The new value for inter long positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedLong</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>intraLong - interLong</em>)</li><li><em>interShort</em>\u00a0- long - The new value for inter short positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedShort</strong>\u00a0=\u00a0<em>totalShort</em>\u00a0\u2013\u00a0<em>intraShort - interShort</em>)</li><li><em>nakedLong</em>\u00a0- long - The new value for naked long positions. If portfolio is net based this value is ignored.</li><li><em>nakedShort</em>\u00a0- long - The new value in naked short positions. If portfolio is net based this value is ignored.</li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">If number of positions specified is inconsistent\u00a0<em>totalLong</em>\u00a0<em>&lt; intraLong</em>\u00a0+\u00a0<em>intraShort</em>\u00a0or\u00a0<em>totalShort &lt; intraShort</em>\u00a0+\u00a0<em>interShort</em>, then method fails. If a portfolio hasn't been selected, the method will fail.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortChangePortfPosition(BSTRexchCmplxAcro,BSTRexchAcro,BSTRpfCode,shortpfType,BSTRfutPeriod,BSTRoptPeriod,booleanisPut,doublestrike,longtotalLong,longtotalShort,longintraLo\">short\u00a0ChangePortfPosition(BSTR\u00a0<em>exchCmplxAcro</em>, BSTR\u00a0<em>exchAcro</em>, BSTR\u00a0<em>pfCode</em>, short\u00a0<em>pfType</em>, BSTR\u00a0<em>futPeriod</em>, BSTR\u00a0<em>optPeriod</em>, boolean\u00a0<em>isPut</em>, double\u00a0<em>strike</em>, long\u00a0<em>totalLong</em>, long\u00a0<em>totalShort</em>, long\u00a0<em>intraLong</em>, long\u00a0<em>intraShort</em>, long\u00a0<em>interLong</em>, long\u00a0<em>interShort</em>, long\u00a0<em>nakedLong</em>, long<em>nakedShort</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Modifies positions in the selected portfolio in the specified contract. If portfolio is not selected or contract can not be found method fails.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>exchCmplxAcro</em>\u00a0- BSTR - The exchange complex acronym (\u201cCME\u201d, \u201cBOTCC\u201d, etc.)</li><li><em>exchAcro</em>\u00a0- BSTR - The exchange acronym (\u201cCME\u201d, \u201cCBT\u201d, etc.)</li><li><em>pfCode</em>\u00a0- BSTR - The product family code (\u201cSP\u201d, \u201cBP\u201d, etc.)</li><li><em>pfType</em>\u00a0- short - The product family type. Possible values are:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- physical</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- debt</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- stock</td></tr><tr><td class=\"confluenceTd\">11</td><td class=\"confluenceTd\">- future</td></tr><tr><td class=\"confluenceTd\">12</td><td class=\"confluenceTd\">- equivalence debt</td></tr><tr><td class=\"confluenceTd\">14</td><td class=\"confluenceTd\">- forward</td></tr><tr><td class=\"confluenceTd\">15</td><td class=\"confluenceTd\">- interest rate swap</td></tr><tr><td class=\"confluenceTd\">16</td><td class=\"confluenceTd\">- E-Debt</td></tr><tr><td class=\"confluenceTd\">17</td><td class=\"confluenceTd\">- credit rate swap</td></tr><tr><td class=\"confluenceTd\">21</td><td class=\"confluenceTd\">- option on physical</td></tr><tr><td class=\"confluenceTd\">22</td><td class=\"confluenceTd\">- option on future</td></tr><tr><td class=\"confluenceTd\">23</td><td class=\"confluenceTd\">- option on equity</td></tr><tr><td class=\"confluenceTd\">31</td><td class=\"confluenceTd\">- combination</td></tr><tr><td class=\"confluenceTd\">41</td><td class=\"confluenceTd\">- option on combination</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>futPeriod</em>\u00a0- BSTR - The period code for future contract (period code for the underlying contract for options). Format is usually YYYYMM, there are special cases like weeklies and flexes when some characters are added to this format (for example \u201c200002W3\u201d). For physicals, equity and options on physicals/equity this parameter should be set to \u201c000000\u201d.</li><li><em>optPeriod</em>\u00a0- BSTR - The period code for option contract. This parameter and following contract identification parameters are ignored for non-option contracts. Same format as\u00a0<em>futPeriod</em>.</li><li><em>isPut</em>\u00a0- boolean - The put (true) or call (false) flag for options.</li><li><em>strike</em>\u00a0- double - The strike price for options. For CDS products, this is the coupon.</li><li><em>totalLong</em>\u00a0- long - The change in total long positions. If portfolio is net based this value will be used for calculating change in net positions (<strong>Net</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>totalShort</em>)</li><li><em>totalShort</em>\u00a0- long - The change in total short positions. If portfolio is net based this value will be used for calculating net positions (<strong>Net</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>totalShort</em>)</li><li><em>intraLong</em>\u00a0- long - The change in intra long positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedLong</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>intraLong - interLong</em>)</li><li><em>intraShort</em>\u00a0- long - The change in intra short positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedShort</strong>\u00a0=\u00a0<em>totalShort</em>\u00a0\u2013\u00a0<em>intraShort - interShort</em>)</li><li><em>interLong</em>\u00a0- long - The change in inter long positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedLong</strong>\u00a0=\u00a0<em>totalLong</em>\u00a0\u2013\u00a0<em>intraLong - interLong</em>)</li><li><em>interShort</em>\u00a0- long - The change in inter short positions. If portfolio is net based this value is ignored. It is used for calculating number of naked positions (<strong>NakedShort</strong>\u00a0=\u00a0<em>totalShort</em>\u00a0\u2013\u00a0<em>intraShort - interShort</em>)</li><li><em>nakedLong</em>\u00a0- long - The change in naked long. If portfolio is net based this value is ignored.</li><li><em>nakedShort</em>\u00a0- long - The change in naked short. If portfolio is net based this value is ignored.</li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">If number of positions specified is inconsistent\u00a0<em>totalLong</em>\u00a0<em>&lt; intraLong</em>\u00a0+\u00a0<em>intraShort</em>\u00a0or\u00a0<em>totalShort &lt; intraShort</em>\u00a0+\u00a0<em>interShort</em>, then method fails. If a portfolio hasn't been selected, the method will fail.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSavePositions(BSTRfileName);\">short\u00a0SavePositions(BSTR\u00a0<em>fileName</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Saves positions for the selected object into the file, specified by\u00a0<em>fileName</em>.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>fileName</em>\u00a0- BSTR - The file name of the position file to save.</li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">If selected portfolio is not NULL saves only positions for selected portfolio. If selected portfolio is NULL, but selected point in time is not saves positions for all portfolios in the selected point in time. If both selected portfolio and selected point in time are NULL method fails.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><p class=\"API\">short\u00a0SaveCDSPositions(BSTR\u00a0<em>fileName</em>);</p><p class=\"section\">Description:</p><p class=\"sectionBody\">Credit editions of SPAN only. Saves CDS positions for the selected object in to the file specified by\u00a0<em>fileName</em>.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>fileName</em>\u00a0- BSTR - The file name of the CDS position file to save.</li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">This call is applicable to PC-Credit only. If selected portfolio is not NULL saves only positions for selected portfolio. If selected portfolio is NULL, but selected point in time is not saves positions for all portfolios in the selected point in time. If both selected portfolio and selected point in time are NULL method fails.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortLoadStream(SAFEARRAY(BYTE)data);\">short\u00a0LoadStream(SAFEARRAY(BYTE)\u00a0<em>data</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Similar to the Load method, this method will load document passed directly in through the\u00a0<em>data</em>\u00a0parameter byte array. This method can bypass the need to save a newly constructed document to disk for the sole purpose of loading it in to SPAN.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>data</em>\u00a0- SAFEARRAY(BYTE) - The stream of data representing a SPAN data document, such as a position file, to load in to SPAN.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><hr/><p><br/></p><h1 id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-dispinterfaceISpanComRM\">dispinterface ISpanComRM</h1><p><strong>methods:</strong></p><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectExchangeComplex(BSTRexcAcro);\">short\u00a0SelectExchangeComplex(BSTR\u00a0<em>excAcro</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Selects specified exchange complex as current.\u00a0<em>excAcro</em>\u00a0is an acronym used to identify exchange complex. A Point In Time should be already selected prior to calling this method. Call to this method automatically resets BFCC and product family selection.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\"><em>excAcro</em>\u00a0- BSTR - The exchange complex to select.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectBFCC(BSTRccCode);\">short\u00a0SelectBFCC(BSTR\u00a0<em>ccCode</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Selects specified BFCC as current. Exchange Complex should be already selected prior to calling this method. Call to this method automatically resets product family selection.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>ccCode</em>\u00a0- BSTR - The combined commodity code to select.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSelectProductFamily(BSTRexchCode,BSTRpfCode,shortpfType);\">short\u00a0SelectProductFamily(BSTR\u00a0<em>exchCode</em>, BSTR\u00a0<em>pfCode</em>, short\u00a0<em>pfType</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Selects specified product family as current.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>exchAcro</em>\u00a0- BSTR - The exchange acronym (\u201cCME\u201d, \u201cCBT\u201d, etc.)</li><li><em>pfCode</em>\u00a0- BSTR - The product family code (\u201cSP\u201d, \u201cBP\u201d, etc.)</li><li><em>pfType</em>\u00a0- short - The product family type. Possible values are:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- physical</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- debt</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- stock</td></tr><tr><td class=\"confluenceTd\">11</td><td class=\"confluenceTd\">- future</td></tr><tr><td class=\"confluenceTd\">12</td><td class=\"confluenceTd\">- equivalence debt</td></tr><tr><td class=\"confluenceTd\">14</td><td class=\"confluenceTd\">- forward</td></tr><tr><td class=\"confluenceTd\">15</td><td class=\"confluenceTd\">- interest rate swap</td></tr><tr><td class=\"confluenceTd\">16</td><td class=\"confluenceTd\">- E-Debt</td></tr><tr><td class=\"confluenceTd\">17</td><td class=\"confluenceTd\">- credit rate swap</td></tr><tr><td class=\"confluenceTd\">21</td><td class=\"confluenceTd\">- option on physical</td></tr><tr><td class=\"confluenceTd\">22</td><td class=\"confluenceTd\">- option on future</td></tr><tr><td class=\"confluenceTd\">23</td><td class=\"confluenceTd\">- option on equity</td></tr><tr><td class=\"confluenceTd\">31</td><td class=\"confluenceTd\">- combination</td></tr><tr><td class=\"confluenceTd\">41</td><td class=\"confluenceTd\">- option on combination</td></tr></tbody></table></div><p class=\"section\">Remarks:</p><p class=\"sectionBody\">BFCC should be already selected prior to calling this method.</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetExchangeComplex();\">void\u00a0ResetExchangeComplex();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets currently selected exchange complex to NULL (removes selection). Also resets BFCC and Product Family selection.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetBFCC();\">void\u00a0ResetBFCC();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets currently selected BFCC to NULL (removes selection). Also resets Product Family selection.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetProductFamily();\">void\u00a0ResetProductFamily();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Sets currently selected product family to NULL (removes selection).</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcImpliedVolatility(booleanflatCabVol);\">short\u00a0CalcImpliedVolatility(boolean\u00a0<em>flatCabVol</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Calculates Implied Volatilities for selected object. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>flatCabVol</em>\u00a0- boolean - Indicator to calculate volatility for cabs for option series that have a cab price type.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcCallPutAverage(booleanoutMoney,booleanacceptZero);\">short\u00a0CalcCallPutAverage(boolean\u00a0<em>outMoney</em>, boolean\u00a0<em>acceptZero</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Does Call/Put Averaging for selected object. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>outMoney</em>\u00a0- boolean - true means use out-of-money volatility, false means do averaging</li><li><em>acceptZero</em>\u00a0- boolean - true means accept zero volatility as valid, false is the opposite</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcSeriesVolatility(booleanuseZero,doubleminExpTime,shortmaxIn,shortmaxOut,shortminAccept);\">short\u00a0CalcSeriesVolatility(boolean\u00a0<em>useZero</em>, double\u00a0<em>minExpTime</em>, short\u00a0<em>maxIn</em>, short\u00a0<em>maxOut</em>, short\u00a0<em>minAccept</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Calculates Series Level Volatilities for selected object. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>useZero</em>\u00a0- boolean - An indication of true means do not filter out zero implied volatilities during calculations, false - filter them out.</li><li><em>minExpTime</em>\u00a0- double - The minimum time to expiration in years. Standard value used by most algorithms is 0.0273973 (10 business days).</li><li><em>maxIn</em>\u00a0- short - The number of closest in the money options which volatilities will be used in calculations (1 is standard).</li><li><em>maxOut</em>\u00a0- short - The number of closest out of the money options which volatilities will be used in calculations (3 is standard).</li><li><em>minAccept</em>\u00a0- short - minimum sufficient number of around the money volatilities (5 is standard).</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcPrice(shortmeth,booleanresetAll);\">short\u00a0CalcPrice(short\u00a0<em>meth</em>, boolean\u00a0<em>resetAll</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Calculates Theoretical Prices for selected object. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>meth</em>\u00a0- boolean - The calculation method code:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- Use option/series level volatility</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- Use option level volatility only</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- Use series level volatility only</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>resetAll</em>\u00a0- An indication of true will reset prices for all contracts, false will reset prices only for contracts with undefined price</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcRiskArray(shortmeth,shortlimitMeth,booleanuseTheorPrice);\">short\u00a0CalcRiskArray(short\u00a0<em>meth</em>, short\u00a0<em>limitMeth</em>, boolean\u00a0<em>useTheorPrice</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Calculates Risk Arrays for selected object. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>meth</em>\u00a0- short - The calculation method code:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- Use option/series level volatility</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- Use option level volatility only</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- Use series level volatility only</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>limitMeth</em>\u00a0- short - The method of how risk array values will be limited:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">- Regular limit</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- Limit Loss Option</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- Limit Gain Option</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- Limit Option</td></tr><tr><td class=\"confluenceTd\">4</td><td class=\"confluenceTd\">- Limit Range</td></tr><tr><td class=\"confluenceTd\">5</td><td class=\"confluenceTd\">- Limit Loss Option Range</td></tr><tr><td class=\"confluenceTd\">6</td><td class=\"confluenceTd\">- Limit Gain Option Range</td></tr><tr><td class=\"confluenceTd\">7</td><td class=\"confluenceTd\">- Limit Option Range</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>useTheorPrice</em>\u00a0- boolean - An indication of true means to use theoretical prices.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdatePrice(doublevalue,shortmeth);\">void\u00a0UpdatePrice(double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update Prices. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update price using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The price value</li><li><em>meth</em>\u00a0- short - The method to use for updating the price. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set price to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change price by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change price by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateVolatility(doublevalue,shortmeth);\">void\u00a0UpdateVolatility(double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update Volatilities. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update volatilities using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The volatility value</li><li><em>meth</em>\u00a0- short - The method to use for updating the volatility. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set volatility to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change volatility by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change volatility by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdatePriceScan(doublevalue,shortmeth);\">void\u00a0UpdatePriceScan(double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update Price Scans. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update price scans using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The price scan value</li><li><em>meth</em>\u00a0- short - The method to use for updating the price scans. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set price scan to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change price scan by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change price scan by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateVolScan(doublevalue,shortmeth);\">void\u00a0UpdateVolScan(double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update Volatility Scans. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update volatility scans using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The volatility scan value</li><li><em>meth</em>\u00a0- short - The method to use for updating the volatility scans. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set volatility scan to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change volatility scan by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change volatility scan by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateRiskFreeRate(doublevalue,shortmeth);\">void\u00a0UpdateRiskFreeRate(double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update Risk-Free Rates. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update risk free rates using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The risk free rate value</li><li><em>meth</em>\u00a0- short - The method to use for updating the risk free rates. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set risk free rate to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change risk free rate by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change risk free rate by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateDividendYield(doublevalue,shortmeth);\">void\u00a0UpdateDividendYield(double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update Dividend Yields. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update dividend yields using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The dividend yield value</li><li><em>meth</em>\u00a0- short - The method to use for updating the dividend yields. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set dividend yield to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change dividend yield by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change dividend yield by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidUpdateTimeToExpiration(doublevalue,shortmeth);\">void\u00a0UpdateTimeToExpiration(double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update Times to Expiration. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update time to expiration using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The time to expiration value</li><li><em>meth</em>\u00a0- short - The method to use for updating the times to expiration. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set time to expiration to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change time to expiration by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change time to expiration by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortUpdateCDSValue(shortvalueType,doublevalue,shortmeth);\">short\u00a0UpdateCDSValue(short\u00a0<em>valueType</em>, double\u00a0<em>value</em>, short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to Update credit default swap values. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time. It will update a credit default swap value using\u00a0<em>value</em>\u00a0and one of the methods below.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>valueType</em>\u00a0- short - The specific credit default swap shock to update. Possible values for\u00a0<em>valueType</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- Systematic shock - Applies to combined commodity level</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- Convergence shock (IG_COMP) - Applies to Exchange Complex level</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- Divergence shock (HY_COMP) - Applies to Exchange Complex level</td></tr><tr><td class=\"confluenceTd\">5</td><td class=\"confluenceTd\">- Sector shock - Applies to combined commodity level</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>value</em>\u00a0- double - The credit default swap value</li><li><em>meth</em>\u00a0- short - The method to use for updating the credit default swap values. Possible values for\u00a0<em>meth</em>:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">(SET) - Set dividend yield to\u00a0<em>value</em>.</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">(CHG) - Change dividend yield by\u00a0<em>value</em></td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">(PCNT) - Change dividend yield by\u00a0<em>value</em>\u00a0%</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (a value was successfully updated) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetStartPeriod(BSTRperiodCode);\">short\u00a0SetStartPeriod(BSTR\u00a0<em>periodCode</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Filters the start period of the selected product family</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>periodCode</em>\u00a0- BSTR - The period code can be specified when a product family is selected to filter for period codes of contracts and series. When an empty string is passed, the start period code is cleared. The filter can be used in the following calculate and update methods:<ul><li>CalcImplitedVolitility</li><li>CalcCallPutAverage</li><li>CalcPrice</li><li>CalcGreeks</li><li>CalcRiskArray</li><li>UpdatePrice</li><li>UpdateVolatility</li><li>UpdatePriceScan</li><li>UpdateVolScan</li><li>UpdateRiskFreeRate</li><li>UpdateDividendYield</li><li>UpdateTimeToExpiration</li></ul></li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">A product family must be selected. The start period code will be cleared when a blank string is passed, or if one of the following methods is called: ResetPeriods, SelectPIT, ResetPIT, Delete, SelectExchangeComplex, SelectBFCC, SelectProductFamily, ResetExchangeComplex, ResetBFCC, or ResetProductFamily</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure - PF not selected).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSetEndPeriod(BSTRperiodCode);\">short\u00a0SetEndPeriod(BSTR\u00a0<em>periodCode</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Filters the end period of the selected product family</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>periodCode</em>\u00a0- BSTR - The period code can be specified when a product family is selected to filter for period codes of contracts and series. When an empty string is passed, the end period code is cleared. The filter can be used in the following calculate and update methods:<ul><li>CalcImplitedVolitility</li><li>CalcCallPutAverage</li><li>CalcPrice</li><li>CalcGreeks</li><li>CalcRiskArray</li><li>UpdatePrice</li><li>UpdateVolatility</li><li>UpdatePriceScan</li><li>UpdateVolScan</li><li>UpdateRiskFreeRate</li><li>UpdateDividendYield</li><li>UpdateTimeToExpiration</li></ul></li></ul><p class=\"section\">Remarks:</p><p class=\"sectionBody\">A product family must be selected. The end period code will be cleared when a blank string is passed, or if one of the following methods is called: ResetPeriods, SelectPIT, ResetPIT, Delete, SelectExchangeComplex, SelectBFCC, SelectProductFamily, ResetExchangeComplex, ResetBFCC, or ResetProductFamily</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Returns 0 (success) or non-zero (failure - PF not selected).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetPeriods();\">void\u00a0ResetPeriods();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Reset the start period and end period filters</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCopyPIT(BSTRdescription,BSTRbusDate,shortisSettle,shortisFinal,BSTRbusTime);\">short\u00a0CopyPIT(BSTR\u00a0<em>description</em>, BSTR\u00a0<em>busDate</em>, short\u00a0<em>isSettle</em>, short\u00a0<em>isFinal</em>, BSTR\u00a0<em>busTime</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to copy Point In Time. This method creates new Point In Time object exactly matching the selected Point In Time. Attributes of the newly created Point In Time will be changed using parameters specified for the method. If Point In Time with these attributes already exists an error will be generated. Point In Time should be selected prior to using this method. If no Point In Time is selected an error will be generated. This method does not affect selected Point In Time.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>description</em>\u00a0- BSTR - The description of the point in time (can be blank)</li><li><em>busDate</em>\u00a0- BSTR - The business date has following format: YYYYMMDD (blank \u2013 ignore)</li><li><em>isSettle</em>\u00a0- short - Settlement indicator: 0 for non-settlement; 1 for settlement; or -1 for no preference on settlement indication.</li><li><em>isFinal</em>\u00a0- short - Final flag: 0 for not final; 1 for final; or -1 for no preference.</li><li><em>busTime</em>\u00a0- BSTR - The time of the point in time formatted as &quot;HHMM&quot; (can also be blank).</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidDoMarketObservation();\">void\u00a0DoMarketObservation();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Calculate a marked to market observation on the currently selected point in time.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-voidResetMarketPrices();\">void\u00a0ResetMarketPrices();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Reset a marked to market observation on the selected point in time.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">None</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMFut();\">double\u00a0GetPortfMTMFut();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns the marked to market future position on the selected portfolio.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - the marked to market future position, or 0 if a portfolio is not selected</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMPrem();\">double\u00a0GetPortfMTMPrem();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns the marked to market amount for premium style positions on the selected portfolio.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - the marked to market option premium, or 0 if a portfolio is not selected</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMTFut();\">double\u00a0GetPortfMTMTFut();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns the marked to market future style open trades on the selected portfolio.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - the marked to market future trade, or 0 if a portfolio is not selected</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfMTMTPrem();\">double\u00a0GetPortfMTMTPrem();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns the marked to market amount for premium style open trades on the selected portfolio.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - the marked to market option premium trade, or 0 if a portfolio is not selected</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfUnrealizedPL();\">double\u00a0GetPortfUnrealizedPL();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns the unrealized P/L for the selected portfolio.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - the unrealized P/L, or 0 if a portfolio is not selected</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfRealizedPLOpen();\">double\u00a0GetPortfRealizedPLOpen();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns the realized P/L on open trades for the selected portfolio.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - the realized open P/L, or 0 if a portfolio is not selected</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-doubleGetPortfRealizedPLLiq();\">double\u00a0GetPortfRealizedPLLiq();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Returns the realized P/L for liquid dated trades on the selected portfolio.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">double - the realized P/L liquidity, or 0 if a portfolio is not selected</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortSaveRegistryTo(BSTRfileName);\">short\u00a0SaveRegistryTo(BSTR\u00a0<em>fileName</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Saves the trade registry to a specified location.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>fileName</em>\u00a0- BSTR - the name of the file to save the trade registry.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortApplyWhatIf(BSTRfileName,booleandoCalc);\">short\u00a0ApplyWhatIf(BSTR\u00a0<em>fileName</em>, boolean\u00a0<em>doCalc</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Use this method to apply what-if\u00a0 scenario stored in the XML file\u00a0<em>fileName</em>\u00a0to the selected Point In Time. If Point In Time is not selected or file is not found, has incorrect format or is empty an error will be generated. Typical sequence of actions before using this command would include creation of a copy of a particular Point In Time. What-if scenario is applied to this copy:</p><ul><li>SelectPIT</li><li>CopyPIT</li><li>SelectPIT</li><li>ApplyWhatIf</li></ul><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>fileName</em>\u00a0- BSTR - The fully specified path name of the what-if scenario XML file to load.</li><li><em>doCalc</em>\u00a0- boolean - When set to true following actions are performed on the selected PointInTime after applying what-if scenario:<ul><li>CalcPrice</li><li>CalcRiskArray</li><li>Calculate</li></ul></li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcValues();\">short\u00a0CalcValues();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Calculate margin requirement. It works on the lowest level object already selected (portfolio or point in time). If point in time is not selected it will work on all loaded points in time.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortCalcGreeks(shortmeth);\">short\u00a0CalcGreeks(short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Calculate greeks. It works on the lowest level object already selected (product family, bfcc, exchange complex, point in time). If point in time is not selected it will work on all loaded points in time.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>meth</em>\u00a0- short - The calculation method code:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- Use option/series level volatility</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- Use option level volatility only</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- Use series level volatility only</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortReplicateBasePrices();\">short\u00a0ReplicateBasePrices();</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Replicate base prices. It works on the lowest level object already selected (exchange complex or point in time). If neither an exchange complex nor a point in time is selected, the call will fail.</p><p class=\"section\">Parameters:</p><p class=\"sectionBody\">None</p><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortApplyVolatilitySkew(shortmeth);\">short\u00a0ApplyVolatilitySkew(short\u00a0<em>meth</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Skew volitility curve folowing a particular skew method. It works on the lowest level object already selected (exchange complex or point in time). If neither an exchange complex nor a point in time is selected, the call will fail.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>meth</em>\u00a0- short - The skew method code:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">0</td><td class=\"confluenceTd\">- Shifts the curve horizontally only</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- Shifts the curve horizontally, vertical shift by Call/Put</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- Shifts the curve horizontally, vertical shift by closest at the money or the average of Call/Put</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortPostTrade(BSTRtimeStamp,longtradeId,BSTRexchCmplxAcro,BSTRexchAcro,BSTRpfCode,shortpfType,BSTRfutPeriod,BSTRoptPeriod,booleanisPut,doublestrike,doubleprice,longtradeQty\">short\u00a0PostTrade(BSTR\u00a0<em>timeStamp</em>, long\u00a0<em>tradeId</em>, BSTR\u00a0<em>exchCmplxAcro</em>, BSTR\u00a0<em>exchAcro</em>, BSTR\u00a0<em>pfCode</em>, short\u00a0<em>pfType</em>, BSTR\u00a0<em>futPeriod</em>, BSTR\u00a0<em>optPeriod</em>, boolean\u00a0<em>isPut</em>, double\u00a0<em>strike</em>, double\u00a0<em>price</em>, long\u00a0<em>tradeQty</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Post a trade to the selected portfolio. If a portfolio isn't selected, the call will fail. After a trade is posted to the portfolio, margin will be recalculated.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>timeStamp</em>\u00a0- BSTR - The timestamp of the trade in a &quot;YYYYMMDDHHMMSS&quot; format.</li><li><em>tradeId</em>\u00a0- long - The trade ID which will be written to the trade register.</li><li><em>exchCmplxAcro</em>\u00a0- BSTR - The exchange complex acronym (\u201cCME\u201d, \u201cBOTCC\u201d, etc.)</li><li><em>exchAcro</em>\u00a0- BSTR - The exchange acronym (\u201cCME\u201d, \u201cCBT\u201d, etc.)</li><li><em>pfCode</em>\u00a0- BSTR - The product family code (\u201cSP\u201d, \u201cBP\u201d, etc.)</li><li><em>pfType</em>\u00a0- short - The product family type. Possible values are:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- physical</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- debt</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- stock</td></tr><tr><td class=\"confluenceTd\">11</td><td class=\"confluenceTd\">- future</td></tr><tr><td class=\"confluenceTd\">12</td><td class=\"confluenceTd\">- equivalence debt</td></tr><tr><td class=\"confluenceTd\">14</td><td class=\"confluenceTd\">- forward</td></tr><tr><td class=\"confluenceTd\">15</td><td class=\"confluenceTd\">- interest rate swap</td></tr><tr><td class=\"confluenceTd\">16</td><td class=\"confluenceTd\">- E-Debt</td></tr><tr><td class=\"confluenceTd\">17</td><td class=\"confluenceTd\">- credit rate swap</td></tr><tr><td class=\"confluenceTd\">21</td><td class=\"confluenceTd\">- option on physical</td></tr><tr><td class=\"confluenceTd\">22</td><td class=\"confluenceTd\">- option on future</td></tr><tr><td class=\"confluenceTd\">23</td><td class=\"confluenceTd\">- option on equity</td></tr><tr><td class=\"confluenceTd\">31</td><td class=\"confluenceTd\">- combination</td></tr><tr><td class=\"confluenceTd\">41</td><td class=\"confluenceTd\">- option on combination</td></tr></tbody></table></div><ul class=\"sectionBody\"><li><em>futPeriod</em>\u00a0- BSTR - The period code for future contract (period code for the underlying contract for options). Format is usually YYYYMM, there are special cases like weeklies and flexes when some characters are added to this format (for example \u201c200002W3\u201d). For physicals, equity and options on physicals/equity this parameter should be set to \u201c000000\u201d.</li><li><em>optPeriod</em>\u00a0- BSTR - The period code for option contract. This parameter and following contract identification parameters are ignored for non-option contracts. Same format as\u00a0<em>futPeriod</em>.</li><li><em>isPut</em>\u00a0- boolean - The put (true) or call (false) flag for options.</li><li><em>strike</em>\u00a0- double - The strike price for options. For CDS products, this is the coupon.</li><li><em>price</em>\u00a0- double - The price.</li><li><em>tradeQty</em>\u00a0- long - The trade quantity.</li></ul><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div><div class=\"APISection\"><h4 class=\"API\" id=\"ComponentInterfaceforVersion4ofPC-SPAN,SPANRiskManager,andSPANRiskManagerClearing-shortResetPrices(shortprodType);\">short\u00a0ResetPrices(short\u00a0<em>prodType</em>);</h4><p class=\"section\">Description:</p><p class=\"sectionBody\">Reset prices for a given product type. It works on the lowest level object already selected (portfolio or point in time). If neither an exchange complex nor a point in time is selected, the call will fail.</p><p class=\"section\">Parameters:</p><ul class=\"sectionBody\"><li><em>prodType</em>\u00a0- short - The product type to reset prices for. Possible values are:</li></ul><div class=\"table-wrap\"><table class=\"wrapped confluenceTable\"><tbody><tr><td class=\"confluenceTd\">-1</td><td class=\"confluenceTd\">- All future based products</td></tr><tr><td class=\"confluenceTd\">-2</td><td class=\"confluenceTd\">- All Option based products</td></tr><tr><td class=\"confluenceTd\">1</td><td class=\"confluenceTd\">- physical</td></tr><tr><td class=\"confluenceTd\">2</td><td class=\"confluenceTd\">- debt</td></tr><tr><td class=\"confluenceTd\">3</td><td class=\"confluenceTd\">- stock</td></tr><tr><td class=\"confluenceTd\">11</td><td class=\"confluenceTd\">- future</td></tr><tr><td class=\"confluenceTd\">12</td><td class=\"confluenceTd\">- equivalence debt</td></tr><tr><td class=\"confluenceTd\">14</td><td class=\"confluenceTd\">- forward</td></tr><tr><td class=\"confluenceTd\">15</td><td class=\"confluenceTd\">- interest rate swap</td></tr><tr><td class=\"confluenceTd\">16</td><td class=\"confluenceTd\">- E-Debt</td></tr><tr><td class=\"confluenceTd\">17</td><td class=\"confluenceTd\">- credit rate swap</td></tr><tr><td class=\"confluenceTd\">21</td><td class=\"confluenceTd\">- option on physical</td></tr><tr><td class=\"confluenceTd\">22</td><td class=\"confluenceTd\">- option on future</td></tr><tr><td class=\"confluenceTd\">23</td><td class=\"confluenceTd\">- option on equity</td></tr><tr><td class=\"confluenceTd\">31</td><td class=\"confluenceTd\">- combination</td></tr><tr><td class=\"confluenceTd\">41</td><td class=\"confluenceTd\">- option on combination</td></tr></tbody></table></div><p class=\"section\">Return Value:</p><p class=\"sectionBody\">short - Return value can be 0 (success) or non-zero (failure).</p></div>"
        }
    },
    "status": "current",
    "title": "Component Interface for Version 4 of PC-SPAN, SPAN Risk Manager, and SPAN Risk Manager Clearing",
    "spaceId": "457312811",
    "id": "457313512",
    "_links": {
        "editui": "/pages/resumedraft.action?draftId=457313512",
        "webui": "/spaces/pubsub/pages/457313512/Component+Interface+for+Version+4+of+PC-SPAN+SPAN+Risk+Manager+and+SPAN+Risk+Manager+Clearing",
        "edituiv2": "/spaces/pubsub/pages/edit-v2/457313512",
        "tinyui": "/x/6AxCGw",
        "base": "https://cmegroupclientsite.atlassian.net/wiki"
    }
}